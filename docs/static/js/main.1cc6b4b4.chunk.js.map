{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAEaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAkBlD,OACC,0BAAMC,SAXc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAQd,2BACGO,KAAK,OACLC,MAAQT,EACRU,SApBqB,SAACP,GAC1BF,EAAgBE,EAAEQ,OAAOF,Y,uBCNbG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAChBC,EADgB,iDACiCC,UAAUH,GAD3C,gEAGHI,MAAMF,GAHH,cAGhBG,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAC3B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATd,kBAYfM,GAZe,4CAAH,sDCCRO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACnC,OACC,yBAAKc,UAAU,0CACd,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KCAKO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EACjBd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAHiC,mBACpCC,EADoC,KAC7BC,EAD6B,KAoB3C,OAdAC,qBAAU,WACTxB,EAASC,GAAWwB,MAAK,SAAAC,GACxBC,YAAW,WACVJ,EAAS,CACRf,KAAMkB,EACNL,SAAS,MAGT,UAGD,CAAEpB,IAGEqB,EDf6BM,CAAc3B,GAAnCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAGvB,OACC,oCACC,gCAAOpB,GACLoB,GAAW,uBAAGJ,UAAU,oCAAb,eAEb,yBAAKA,UAAU,aAEbH,EAAOJ,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAASD,UEfvBmB,EAAe,WAAO,IAAD,EAEK3C,mBAAS,CAAC,cAFf,mBAEzB4C,EAFyB,KAEb7C,EAFa,KAWjC,OAEC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEA,4BAEE6C,EAAWrB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CAAS4B,IAAM5B,EAAWA,SAAaA,UChB9C+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1cc6b4b4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\t\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue ( e.target.value );\r\n\t};\r\n\r\n\tconst handleSubmit = (e) =>{\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2){\r\n\t\t\tsetCategories( cats => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit = {handleSubmit}>\r\n\r\n\t\t\t<input \r\n\t\t\t   type=\"text\"\r\n\t\t\t   value={ inputValue }\r\n\t\t\t   onChange={handleInputChange}\r\n\t\t\t   />\r\n\t\t</form>\r\n\t)\r\n}\r\n","\r\n\texport const getGifs = async ( category ) => {\r\n\t\tconst url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) } &limit=10&api_key=w9FVFQsgqe6FC7ZLke34hb9oLyte9FmZ`;\r\n\t\r\n\t\tconst resp = await fetch(url);\r\n\t\tconst { data } = await resp.json();\r\n\t\tconst gifs = data.map(img =>{\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images?.downsized_medium.url\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn gifs;\r\n\t}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__bounce\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{ title }</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\t\r\n   const { data:images, loading }  = useFetchGifs( category ); \r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3> { category }</h3>\r\n\t\t\t{ loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\t\t\t{\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map(img => (\r\n\t\t\t\t\t<GifGridItem key={img.id} { ...img } />\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n}\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\t\r\n\tuseEffect(() => {\r\n\t\tgetGifs( category ).then(imgs =>{\r\n\t\t\tsetTimeout(()=>{\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t});\r\n\r\n\t\t\t},3000)\r\n\r\n\t\t});\r\n\t}, [ category ])\t\r\n\r\n\r\n\treturn state;\r\n\r\n}","import React,{ useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\tconst [ categories, setCategories ] = useState(['One Punch']);\r\n\t\r\n\t//const handleAdd = ()=>{\r\n\t\t//setCategories( [...categories,'Rafael Frias']);\r\n\t//\tsetCategories( cats => [...cats,inputValue]);\r\n\t//}\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories = { setCategories } />\r\n\t\t\t<hr />\r\n\t\t\t\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map( category =>(\r\n\t\t\t\t\t\t <GifGrid key={ category } category = { category } />\r\n\t\t\t\t\t))\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n \n \nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}